# Copyright 2018 The Kubernetes Authors.
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: gcsfuse.csi.storage.gke.io
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
    - Ephemeral
  requiresRepublish: true
  fsGroupPolicy: None
# The spec.tokenRequests field instructs Kubernetes to generate a service account token and make it available to the CSI driver's pod.
# Then it is used in WI handshake:
#  - The kubelet on the node creates a JWT service account token for the driver's pod with the audience specified in the CSIDriver resource. 
#  - The GCS FUSE CSI driver reads this token, and sends this token to the Google STS to exchange it for a short-lived Google Cloud access token.
#  - The Google STS verifies the token (validates that the aud claim in the token matches the identity provider it expects), and if the token is valid, the STS provides a Google Cloud access token.
#  - The driver then uses this Google Cloud token to access GCS buckets.
  tokenRequests:
    # When you use the cloudbuild-install.yaml script, it automatically patches this audience value to match the discovered or provided IDENTITY_PROVIDER for your cluster. 
    - audience: <project-id>.svc.id.goog
    # - audience: //iam.googleapis.com/projects/326181500027/locations/global/workloadIdentityPools/wi-pool-amacaskill-k8s-cluster-3/providers/wi-p-amacaskill-k8s-cluster-3
